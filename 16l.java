// 1 практика

//1. Цикл for (1)
//В цикле for используется массив Number, который содержит элементы разных типов: Integer, int, Float и Double. Когда перебираются этот массив и передаете элементы в метод printNum, происходит следующее:

//new Integer(1): Это объект типа Integer, который будет соответствовать методу printNum(Number n), так как Integer является подклассом Number. Вывод будет: Number=1.

//11: Это примитивный тип int, который также может быть автоматически упакован в Integer, но так как вы передаете его как Number, он будет соответствовать методу printNum(Number n). Вывод будет: Number=11.

//1.11f: Это примитивный тип float, который будет автоматически упакован в Float. Поскольку Float является подклассом Number, он также будет соответствовать методу printNum(Number n). Вывод будет: Number=1.11.

//11.11: Это примитивный тип double, который будет автоматически упакован в Double. Поскольку Double также является подклассом Number, он будет соответствовать методу printNum(Number n). Вывод будет: Number=11.11.

//Таким образом, вывод в цикле for будет:

Number=1
Number=11
Number=1.11
Number=11.11

//2. Отдельные вызовы (2)
//Теперь давайте рассмотрим, что происходит в отдельных вызовах метода printNum:

//a.printNum(new Integer(1));: Это объект типа Integer, который будет соответствовать методу printNum(Integer i). Вывод будет: Integer = 1.

//a.printNum(11);: Это примитивный тип int, который будет соответствовать методу printNum(int i). Вывод будет: int = 11.

//a.printNum(1.11f);: Это примитивный тип float, который будет соответствовать методу printNum(Float f). Вывод будет: Float = 1.1100.

//a.printNum(11.11);: Это примитивный тип double, который будет соответствовать методу printNum(Number n), так как нет более специфичного метода для double. Вывод будет: Number=11.11.

//Таким образом, вывод в отдельных вызовах будет:

Integer = 1
int = 11
Float = 1.1100
Number=11.11

//Разница в выводе между циклом for и отдельными вызовами метода printNum заключается в том, как Java выбирает перегруженные методы:

//В цикле for все элементы массива рассматриваются как объекты типа Number, и вызывается метод printNum(Number n).
//В отдельных вызовах Java выбирает наиболее подходящий метод в зависимости от типа аргумента, что приводит к вызову различных перегруженных версий метода printNum.
